# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:[3.5, 3.6, 3.8, 3.9, 3.10]

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging

  - apt update -y
  - apt upgrade -y
  - apt install graphviz graphviz-dev protobuf-compiler libprotoc-dev -y -f
  - pip install pip --upgrade

  # 安裝虛擬環境
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install mkdocs psycopg2-binary mkdocs mkdocs-bootstrap mkdocs-webcontext-plugin mkdocs-mdpo-plugin mkdocs-markdownextradata-plugin mkdocs-gitlab-plugin mkdocs-rss-plugin mkdocs-i18n mkdocs-material mdx_truly_sane_lists mkdocs-redirects mkdocs-mermaid-plugin mkdocs-mermaid2-plugin markdown --upgrade

aipp:
  script:
    # Python套件安裝測試
    - python src/auto_install_python_pack.py

mkdocs:
  script:
    - mkdocs build
  artifacts:
    paths:
      - site/

pages:
  stage: deploy
  script:
    - mkdir .public
    - cp -r * .public
    - mv .public public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  environment: production
